name: 'Deploy Workshops'

on:
  push:
    branches:
      - master
    paths:
      - 'workshops/**'
      - 'deploy/**'

jobs:
  cloudformation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install dependencies
        working-directory: ./deploy/aws
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build CloudFormation
        working-directory: ./deploy/aws
        run: python templates/workshops.py
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: workshops-dot-rob-kenis-dot-com
          template: deploy/aws/output/workshops.json
          no-fail-on-empty-changeset: "1"

  aws-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: unfor19/install-aws-cli-action@v1
      - name: Upload website
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name rob-kenis-dot-com | jq -r '.Stacks[].Outputs[] | select(.OutputKey=="WebsiteOriginBucketName") | .OutputValue')
          aws s3 sync workshops/aws-lambda/ s3://$BUCKET_NAME/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
